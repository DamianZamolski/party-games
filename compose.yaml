services:
  web:
    container_name: web
    build:
      context: ./web
    ports:
      - '$WEB_PORT:7777'
    environment:
      - API_URL=http://api
    restart: unless-stopped

  api:
    container_name: api
    build:
      context: ./api
    ports:
      - '$API_PORT:7777'
    environment:
      - DATABASE_HOST=database
      - DATABASE_PORT=$DATABASE_PORT
      - DATABASE_NAME=$DATABASE_NAME
      - DATABASE_USER=$DATABASE_USER
      - DATABASE_PASSWORD=$DATABASE_PASSWORD
    restart: unless-stopped

  database:
    container_name: database
    image: postgres
    environment:
      - POSTGRES_DB=$DATABASE_NAME
      - POSTGRES_USER=$DATABASE_USER
      - POSTGRES_PASSWORD=$DATABASE_PASSWORD
    ports:
      - '5432:$DATABASE_PORT'
    restart: unless-stopped
    volumes:
      - ./.database:/var/lib/postgresql/data
    command:
      - postgres
      - -c
      - log_statement=all
      - -c
      - log_duration=on
      - -c
      - logging_collector=off 

  loki:
    profiles:
      - prod
    container_name: loki
    image: grafana/loki:latest
    restart: unless-stopped

  grafana:
    profiles:
      - prod
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - '$GRAFANA_PORT:3000'
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./.grafana:/var/lib/grafana
    restart: unless-stopped

  test:
    profiles:
      - test
    container_name: test
    build:
      context: ./test
    environment:
      - WEB_URL=http://web
    depends_on:
      web:
        condition: service_healthy
      api:
        condition: service_healthy
    volumes:
      - ./.test:/app/playwright-report

volumes:
  grafana-data:
